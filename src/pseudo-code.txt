PROVIDED DATA

DATABASE = {
    1: [('A', 5), ('C', 1), ('D', 1)],
    2: [('A', 2), ('C', 6), ('E', 2), ('G', 5)],
    3: [('A', 1), ('B', 2), ('C', 1), ('D', 6), ('E', 1)],
    4: [('B', 4), ('C', 3), ('D', 3), ('E', 1)],
    5: [('B', 2), ('C', 2), ('E', 1), ('F', 5), ('G', 2)],
    6: [('A', 1), ('C', 1), ('D', 1), ('G', 3)],
    7: [('B', 1), ('C', 3), ('D', 1), ('E', 3), ('F', 2)],
    8: [('A', 4), ('C', 1), ('D', 2), ('E', 1)]
}

class Item:
- TID: number
- UTILITY: number
- total_utility: number

class UtilityList:
- item_utilities  = dict(string, Item)
- dependency_probabilities = dict(string, Item)

- method: add_utility(string, number)
- method: get_utility(string)

item_utilities = dict(item)

min_util = 0

STEP 1: SCAN DATABASE TO:
- CALCULATE RTWU OF EACH TRANSACTION
- CREATE UTILITY LIST OF EACH ITEMS

for transaction in DATABASE:
- calculate_rtwu(transaction)
- add_uitility_to_items(transaction)

STEP 2: CALCULATE DEPENDENCY PROBABILITY

for item_utility in Utility.item_utilities:


###NOTE
P(ABC) = P(A) * P(B/A) * P(C/B) = RTWU(A) / D * RTWU(AB) / RTWU(A) * RTWU(CB) / RTWU(B) = RTWU(AB) * RTWU(CB) / [80 * RTWU(B)]
= 11 * 44 / (80 * 44) = 11/80 = P(ABC)

P(ED) != P(E) * P(D)

RTWU(A) = 47
RTWU(B) = 44
RTWU(C) = 80
RTWU(D) = 53
RTWU(E) = 67
RTWU(F) = 22
RTWU(G) = 33